service:
  name: product-service
frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ CatalogItemsQueue, Arn ]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: CreateProductTopic

resources:
  Resources:
    CatalogItemsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "catalogItemsQueue"
    CreateProductTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "createProductTopic"
    CreateProductSubscription:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "artemis.fisher@gmail.com"
        Protocol: email
        TopicArn:
          Ref: CreateProductTopic
  Outputs:
    CatalogItemsQueueArn:
      Value:
        Fn::GetAtt: [ CatalogItemsQueue, Arn ]

functions:
  getProductsList:
    handler: handlers/getProductsList.handler
    events:
      - http:
          method: get
          path: products
          cors: true
  getProductsById:
    handler: handlers/getProductsById.handler
    events:
      - http:
          method: get
          path: products/{productId}
          cors: true
  addProduct:
    handler: handlers/addProduct.handler
    events:
      - http:
          method: post
          path: products
          cors: true
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn
